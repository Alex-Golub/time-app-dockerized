version: "3"

services:
  frontend:
    build: ./frontend
    restart: always
    ports:
      - 3000:3000
    volumes:
      # preserve node_modules dir in the running container
      - /app/node_modules
      # map local ./frontend content to container WORKDIR /app
      # changes made locally will be reflected immediately on the running container
      - ./frontend:/app

  api:
    build: ./api
    restart: always
    ports:
      - 5555:5000
    # wait only for creation of mysql container (mysql init process takes time)
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - /app/node_modules
      - ./api:/app
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PORT: "3306"
      MYSQL_PASSWORD: password
      MYSQL_DB: time_db

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: time_db
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-u', 'root' ]
      interval: 10s
      timeout: 10s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8888:8080

volumes:
  # mysql_data direcotry will be managed by docker exact location is /var/lib/docker/volumes
  mysql_data:
